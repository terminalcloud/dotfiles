#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream web-terminal {
        server unix:/web-terminal-mount/web-terminal-nginx.sock;
    }

    server {
        listen 40001 ssl;
        ssl on;
        ssl_certificate      /etc/cloudlabs/certs/client.crt;
        ssl_certificate_key  /etc/cloudlabs/certs/client.key;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        location / {
            access_by_lua '
                  local password = ngx.var.http_x_proxy_password
                  # TODO: hash the password, avoid storing raw in nginx conf?
                  if password ~= "<<<TEMPLATE_PROXY_PASSWORD>>>" then
                    ngx.exit(401);
                  end
                  ngx.req.clear_header("X-Proxy-Password")
            ';
            set_by_lua $proxy_location '
                  local port = ngx.var.http_x_target_port
                  ngx.log(ngx.ERR,"PORT: ",port)
                  if port == nil or port == "" or port == "main" then
                     return "http://web-terminal";
                  else
                    return "http://127.0.0.1:"..port;
                  end
            ';
            #auth_basic "Restricted";
            #auth_basic_user_file /etc/cloudlabs/.htpasswd;
            proxy_pass $proxy_location;
            proxy_set_header      host $host;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection  'upgrade';
            proxy_set_header      x-real-ip $remote_addr;
            proxy_read_timeout    2d;
            proxy_send_timeout    2d;
        }
    }
}
